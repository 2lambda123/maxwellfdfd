clear all; close all; clear classes; clc;

%% Set flags.
isnew = true;
inspect_only = true;

%% Solve the system.
if isnew
	gray = [0.5 0.5 0.5];  % [r g b]
	solveropts.method = 'gpu';
	[E, H, obj_array, err] = maxwell_run(1e-9, 1550, ...
		{['Palik', filesep, 'SiO2'], 'none'}, [-700, 700; -600, 600; -200, 1700], 20, BC.p, 200, ...
		{['Palik', filesep, 'SiO2'], 'none'}, Box([-50, 50; -50, 50; -200, 1700], [2, 2, 20]), ...
		{['Hagemann', filesep, 'Ag'], gray}, ...
		[Box([-700, -25; -25, 25; -200, 1700], 20), Box([25, 700; -25, 25; -200, 1700], 20)], ...
		DistributedSrc(Axis.z, 200, 2.0), 1e-5, inspect_only);

% 	[E, H, obj_array, err] = maxwell_run(1e-9, 1550, ...
% 		{['Palik', filesep, 'SiO2'], 'none'}, [-200, 1700; -700, 700; -600, 600], 20, BC.p, 200, ...
% 		{['Palik', filesep, 'SiO2'], 'none'}, Box([-200, 1700; -50, 50; -50, 50], [20, 2, 2]), ...
% 		{['Hagemann', filesep, 'Ag'], gray}, ...
% 		[Box([-200, 1700; -700, -25; -25, 25], 20), Box([-200, 1700; 25, 700; -25, 25], 20)], ...
% 		DistributedSrc(Axis.x, 200, 2.0), 1e-5, inspect_only);

% 	[E, H, obj_array, err] = maxwell_run(1e-9, 1550, ...
% 		{['Palik', filesep, 'SiO2'], 'none'}, [-600, 600; -200, 1700; -700, 700], 20, BC.p, 200, ...
% 		{['Palik', filesep, 'SiO2'], 'none'}, Box([-50, 50; -200, 1700; -50, 50], [2, 20, 2]), ...
% 		{['Hagemann', filesep, 'Ag'], gray}, ...
% 		[Box([ -25, 25; -200, 1700; -700, -25], 20), Box([-25, 25; -200, 1700; 25, 700], 20)], ...
% 		DistributedSrc(Axis.y, 200, 2.0), 1e-5, inspect_only);

	if ~inspect_only
		save(mfilename, 'E', 'H', 'obj_array');
	end
else
	load(mfilename);
end

%% Visualize the solution.
if ~inspect_only
	figure;
	opts.withabs = true;
	opts.withgrid = true;
	visall(E{Axis.x}, obj_array, opts);
end
